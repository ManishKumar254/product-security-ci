name: Product Security CI

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  kics-iac-misconfig:
    name: KICS (IaC misconfig scan)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run KICS (Docker)  # quality gate ON (fails on HIGH)
        run: |
          mkdir -p reports
          docker run --rm -v "$PWD:/repo" checkmarx/kics:latest \
            scan -p /repo -o /repo/reports --ci --report-formats sarif,html

      # âœ… Sanitize KICS SARIF so GitHub accepts it
      - name: Sanitize KICS SARIF (dedupe taxonomies/taxa)
        if: always()
        run: |
          sudo apt-get update >/dev/null 2>&1
          sudo apt-get install -y jq >/dev/null 2>&1 || true
          # Deduplicate taxonomy entries and their taxa by common keys
          jq '
            if .runs then
              .runs |= map(
                if .taxonomies then
                  .taxonomies |= (
                    map(
                      # dedupe the taxonomy list itself by name/id if present
                      .
                      # ensure taxa array has unique items (id/guid/name/shortDescription.text used as key)
                      | ( if has("taxa") and (.taxa|type=="array") then
                          .taxa |= unique_by(.id // .guid // .name // .shortDescription.text)
                        else . end )
                    )
                  )
                else . end
              )
            else . end
          ' reports/results.sarif > reports/results.sarif.sanitized 2>/dev/null || cp reports/results.sarif reports/results.sarif.sanitized

          # Quick schema sanity check: file must exist and be non-empty
          test -s reports/results.sarif.sanitized || cp reports/results.sarif reports/results.sarif.sanitized

      - name: List report files (debug)
        if: always()
        run: ls -lah reports || true

      - name: Upload SARIF to Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/results.sarif.sanitized

      - name: Upload HTML report (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kics-html
          path: reports/results.html

  trivy-repo-and-image:
    name: Trivy (repo + image vuln scan)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Trivy FS scan (SARIF)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-fs.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload SARIF (Trivy FS)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-fs.sarif

      - name: Build Docker image (optional)
        if: hashFiles('Dockerfile') != ''
        run: docker build -t demoapp:ci .

      - name: Trivy Image scan (SARIF)
        if: hashFiles('Dockerfile') != ''
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: 'demoapp:ci'
          format: 'sarif'
          output: 'trivy-image.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload SARIF (Trivy Image)
        if: hashFiles('Dockerfile') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-image.sarif

  snyk-deps:
    name: Snyk (dependency / IaC) scan
    runs-on: ubuntu-latest
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      # Ensure Python env so Snyk can resolve pip deps
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Prepare virtualenv & install deps (best-effort)
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip setuptools wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi

      - name: Setup Snyk
        uses: snyk/actions/setup@0.4.0

      - name: Verify Snyk auth
        run: snyk auth "$SNYK_TOKEN"

      # --- Open Source (dependencies) ---
      - name: Snyk Open Source (SARIF)
        run: |
          . .venv/bin/activate || true
          if [ -f requirements.txt ]; then
            snyk test --file=requirements.txt --package-manager=pip --skip-unresolved --sarif-file-output=snyk-deps.sarif || true
          else
            snyk test --all-projects --skip-unresolved --sarif-file-output=snyk-deps.sarif || true
          fi
          # Fallback: minimal valid SARIF so upload never fails
          [ -f snyk-deps.sarif ] || echo '{"version":"2.1.0","runs":[{"tool":{"driver":{"name":"Snyk"}},"results":[]}]}'>snyk-deps.sarif

      - name: Upload SARIF (Snyk Deps)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-deps.sarif

      # --- IaC (Terraform/K8s) ---
      - name: Snyk IaC (SARIF)
        run: |
          snyk iac test . --sarif-file-output=snyk-iac.sarif || true
          [ -f snyk-iac.sarif ] || echo '{"version":"2.1.0","runs":[{"tool":{"driver":{"name":"Snyk IaC"}},"results":[]}]}'>snyk-iac.sarif

      - name: Upload SARIF (Snyk IaC)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-iac.sarif

  gitguardian-secrets:
    name: GitGuardian (secrets) scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (fetch full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: GitGuardian scan (ggshield)
        uses: GitGuardian/ggshield-action@v1
        with:
          # optional flags passed to 'ggshield secret scan ci'
          args: -v --ignore-known-secrets
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
